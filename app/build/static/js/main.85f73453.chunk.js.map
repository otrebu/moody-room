{"version":3,"sources":["components/pages/home.js","components/person/Emoji.js","components/person/Listing.js","Contexts/AppContext.js","components/pages/current.js","data/api.js","components/pages/history.js","components/pages/hackathon.js","components/pages/settings.js","components/Routes.js","components/shared/SiteHeader.js","components/shared/Menu.js","Contexts/Themes.js","components/App.js","serviceWorker.js","index.js"],"names":["Home","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Link","to","React","Component","Emoji","_this$props$person","props","person","mood","facialAttributes","facialAttributeClasses","hasBeard","hasGlasses","hasMoustache","hasSunglasses","concat","width","viewBox","fill","stroke","strokeWidth","d","PersonListing","_this","call","state","personList","setState","prevProps","prevState","snapshot","hideTimestamp","timestamp","date","Date","console","log","month","getMonth","day","getDate","year","getFullYear","hr","getHours","min","getMinutes","ampm","formatTime","length","map","index","person_Emoji","AppContext","createContext","Current","Consumer","appStore","moodSummary","name","count","Listing_PersonListing","getJson","_ref","asyncToGenerator","regenerator_default","mark","_callee","apiEndPoint","wrap","_context","prev","next","fetch","abrupt","sent","json","stop","_x","api","getCurrentStatus","_ref2","_callee2","data","commonMoodName","_context2","commonMood","getMoodsHistory","_ref3","_callee3","timelapseDuration","_context3","moodTimeFrames","_x2","getHackathon","_ref4","_callee4","_context4","History","hiddenClass","timer","_componentDidMount","currentPersonListIndex","personDataList","updatePersonList","_this2","match","params","listIndex","clearInterval","setInterval","_this$state","Hackathon","Settings","onClick","e","preventDefault","method","headers","Headers","Authorization","Content-Type","then","results","Routes","Switch","Route","exact","path","component","SiteHeader","_this$props","toggleNavigation","iconClassName","NavLink","Menu","navigationClass","activeClassName","Themes","navigation","isOpen","icon","openedClassName","closedClassName","container","moods","happy","sad","angry","confused","disgusted","surprised","calm","unknown","toggleNavigationHandler","App","happys","isNavigationOpen","navigationClassName","isDataLoaded","currentMoodTimer","requestCurrentData","objectSpread","BrowserRouter","Provider","SiteHeader_SiteHeader","Menu_Menu","components_Routes","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85f73453.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class Home extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"content-container f-text-center\">\n                    <h3>\n                        In todays world, humans frequently hide their emotions.\n                        <br />\n                        Lets allow machines to display them for us again....\n                    </h3>\n                    <p />\n                    <p />\n                    <p />\n                    <h5>\n                        <Link to=\"/current\">View the current moods</Link>\n                    </h5>\n                    <h5>\n                        <Link to=\"/history\">View a timelapse of recorded moods</Link>\n                    </h5>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nclass Emoji extends Component {\n    render() {\n        const { mood, facialAttributes } = this.props.person;\n        let facialAttributeClasses = '';\n\n        if (facialAttributes.hasBeard) {\n            facialAttributeClasses += ' has-beard';\n        }\n        if (facialAttributes.hasGlasses) {\n            facialAttributeClasses += ' has-glasses';\n        }\n        if (facialAttributes.hasMoustache) {\n            facialAttributeClasses += ' has-moustache';\n        }\n        if (facialAttributes.hasSunglasses) {\n            facialAttributeClasses += ' has-sunglasses';\n        }\n\n        return (\n            <div className={`smiley mood-${mood} ${facialAttributeClasses}`}>\n                <div className=\"face\">\n                    <div className=\"eye left\">\n                        <svg width=\"30%\" viewBox=\"0 0 30 42\" className=\"tear\">\n                            <path\n                                fill=\"#66b2ff\"\n                                stroke=\"transparent\"\n                                strokeWidth=\"0\"\n                                d=\"M15 3\n                                         Q16.5 6.8 25 18\n                                         A12.8 12.8 0 1 1 5 18\n                                         Q13.5 6.8 15 3z\"\n                            />\n                        </svg>\n                    </div>\n                    <div className=\"eye right\" />\n                    <div className=\"mouth\" />\n                    <div className=\"beard\" />\n                    <div className=\"moustache left\" />\n                    <div className=\"moustache right\" />\n                    <div className=\"glasses eye-glasses\">\n                        <div className=\"g-top \" />\n                        <div className=\"g-left glass\" />\n                        <div className=\"g-right glass\" />\n                    </div>\n                    <div className=\"glasses sunglasses\">\n                        <div className=\"g-top\" />\n                        <div className=\"g-left glass\" />\n                        <div className=\"g-right glass\" />\n                    </div>\n                    <div className=\"eyebrow left\" />\n                    <div className=\"eyebrow right\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Emoji;\n","import React from 'react';\nimport Emoji from './Emoji';\n\nexport class PersonListing extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            personList: {}\n        };\n    }\n\n    componentDidMount() {\n        this.setState((state, props) => ({\n            personList: props.personList\n        }));\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps !== this.props) {\n            this.setState((state, props) => ({\n                personList: props.personList\n            }));\n        }\n    }\n\n    render() {\n        const { personList } = this.state;\n        const { hideTimestamp } = this.props;\n\n        const formatTime = timestamp => {\n            const date = new Date(timestamp);\n            console.log(timestamp);\n            console.log(date);\n            const month = date.getMonth() + 1;\n            const day = date.getDate();\n            const year = date.getFullYear();\n\n            let hr = date.getHours();\n            let min = date.getMinutes();\n            if (min < 10) {\n                min = '0' + min;\n            }\n            let ampm = 'am';\n            if (hr > 12) {\n                hr -= 12;\n                ampm = 'pm';\n            }\n            return `${day}/${month}/${year} at ${hr}:${min} ${ampm}`;\n        };\n\n        return (\n            <div className=\"listing-container\">\n                {personList && personList.facialAttributes ? (\n                    <div className=\"wrapper\">\n                        {!hideTimestamp && (\n                            <div className=\"fw\">\n                                <h5>{formatTime(personList.timestamp)}</h5>\n                            </div>\n                        )}\n                        {personList.facialAttributes.length > 0\n                            ? personList.facialAttributes.map(\n                                  (person, index) => (\n                                      <Emoji key={index} person={person} />\n                                  )\n                              )\n                            : 'Empty room...'}\n                    </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nexport const AppContext = React.createContext({});\n","import React from 'react';\nimport { PersonListing } from '../person/Listing';\nimport { AppContext } from '../../Contexts/AppContext';\n\nexport class Current extends React.Component {\n    render() {\n        return (\n            <AppContext.Consumer>\n                {appStore => {\n                    const { moodSummary } = appStore;\n\n                    return (\n                        <div>\n                            <div className=\"title-container\">\n                                <h2>Current Moods</h2>\n                            </div>\n\n                            <div className=\"content-container\">\n                                {moodSummary.length > 0 ? (\n                                    <div>\n                                        {moodSummary.map(mood => (\n                                            <span\n                                                key={mood.name}\n                                                className=\"smiley-tag\"\n                                            >\n                                                {mood.name}: {mood.count}\n                                            </span>\n                                        ))}\n                                    </div>\n                                ) : (\n                                    <span>\n                                        No happy people, no sad people, no\n                                        people?\n                                    </span>\n                                )}\n                            </div>\n                            <div>\n                                <PersonListing\n                                    personList={appStore.personList}\n                                    hideTimestamp={true}\n                                />\n                            </div>\n                        </div>\n                    );\n                }}\n            </AppContext.Consumer>\n        );\n    }\n}\n","const baseUrl = 'http://api.moodyroom.space';\n//const baseUrl = 'http://localhost:8080';\n\nconst getJson = async apiEndPoint =>\n    (await fetch(`${baseUrl}${apiEndPoint}`)).json();\n\nconst getCurrentStatus = async () => {\n    const apiEndPoint = '/api/moods/current/';\n    const data = await getJson(apiEndPoint);\n\n    if (data != null) {\n        const { moodSummary } = data;\n        const commonMoodName = data.commonMood\n            ? data.commonMood.name\n            : 'unknown';\n        const personList = data;\n\n        return {\n            moodSummary,\n            commonMoodName,\n            personList\n        };\n    }\n\n    return null;\n};\n\nconst getMoodsHistory = async timelapseDuration => {\n    const apiEndPoint = `/api/moods/last/${timelapseDuration}`;\n    const data = await getJson(apiEndPoint);\n\n    if (data != null) {\n        return data.moodTimeFrames;\n    }\n    return null;\n};\n\nconst getHackathon = async () => {\n    const apiEndPoint = '/api/moods/hackathon/';\n    const data = await getJson(apiEndPoint);\n\n    if (data != null) {\n        return data.moodTimeFrames;\n    }\n    return null;\n};\n\nconst api = {\n    getCurrentStatus,\n    getMoodsHistory,\n    getHackathon\n};\n\nexport default api;\n","import React from 'react';\nimport { PersonListing } from '../person/Listing';\nimport api from '../../data/api';\n\nexport class History extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hiddenClass: 'hidden',\n            personList: [],\n            timer: null,\n            timelapseDuration: 50\n        };\n    }\n\n    async componentDidMount() {\n        let currentPersonListIndex = 0;\n        const timelapseDuration = this.props.match.params.count || 250;\n\n        const personDataList = await api.getMoodsHistory();\n\n        const updatePersonList = listIndex => {\n            if (currentPersonListIndex < personDataList.length) {\n                this.setState({\n                    personList: personDataList[listIndex]\n                });\n            } else {\n                currentPersonListIndex = 0;\n                clearInterval(this.state.timer);\n            }\n        };\n\n        updatePersonList(currentPersonListIndex);\n\n        this.setState({\n            timer: setInterval(\n                () => {\n                    currentPersonListIndex++;\n                    updatePersonList(currentPersonListIndex);\n                },\n                timelapseDuration > 50 ? 500 : 1000\n            )\n        });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.timer);\n    }\n\n    render() {\n        const { personList, hiddenClass } = this.state;\n\n        return (\n            <div>\n                <h2>History</h2>\n\n                <div className={`content-container ${hiddenClass}`}>\n                    {personList ? (\n                        <PersonListing personList={personList} />\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { PersonListing } from '../person/Listing';\nimport api from '../../data/api';\n\nexport class Hackathon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hiddenClass: 'hidden',\n            personList: [],\n            timer: null\n        };\n    }\n\n    async componentDidMount() {\n        let currentPersonListIndex = 0;\n\n        const personDataList = await api.getHackathon();\n\n        const updatePersonList = listIndex => {\n            if (currentPersonListIndex < personDataList.length) {\n                this.setState({\n                    personList: personDataList[listIndex]\n                });\n            } else {\n                currentPersonListIndex = 0;\n                clearInterval(this.state.timer);\n            }\n        };\n\n        updatePersonList(currentPersonListIndex);\n\n        this.setState({\n            timer: setInterval(() => {\n                currentPersonListIndex++;\n                updatePersonList(currentPersonListIndex);\n            }, 500)\n        });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.timer);\n    }\n\n    render() {\n        const { personList, hiddenClass } = this.state;\n\n        return (\n            <div>\n                <h2>Hackathon moods</h2>\n\n                <div className={`content-container ${hiddenClass}`}>\n                    {personList ? (\n                        <PersonListing personList={personList} />\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nexport class Settings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timer: null\n        };\n    }\n\n    render() {\n        const handleListLights = e => {\n            e.preventDefault();\n\n            fetch('https://api.lifx.com/v1/lights/all/effects/pulse', {\n                method: 'POST',\n                headers: new Headers({\n                    Authorization:\n                        'Authorization: Bearer c00033299035cd9fb23d71440b561689301ba07792a4408a20144d0a57f21143',\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                }),\n                //data: 'power=on'\n                data: \"period=2 cycles=5 color=green'\"\n            }).then(results => {\n                console.log(results);\n            });\n        };\n\n        return (\n            <div>\n                <button className=\"btn\" onClick={handleListLights}>\n                    Turn light on\n                </button>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Home } from './pages/home';\nimport { Current } from './pages/current';\nimport { History } from './pages/history';\nimport { Hackathon } from './pages/hackathon';\nimport { Settings } from './pages/settings';\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/current\" component={Current} />\n        <Route exact path=\"/history/\" component={History} />\n        <Route exact path=\"/history/:count\" component={History} />\n        <Route exact path=\"/hackathon/\" component={Hackathon} />\n        {/* <Route exact path=\"/people\" component={People} /> */}\n        <Route exact path=\"/settings\" component={Settings} />\n    </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport class SiteHeader extends React.Component {\n    render() {\n        const { toggleNavigation, iconClassName } = this.props;\n\n        return (\n            <header>\n                <div className=\"menu-trigger\" onClick={toggleNavigation}>\n                    <i className={'far ' + iconClassName} />\n                </div>\n                <div className=\"logo\">\n                    <NavLink to=\"/\">\n                        <h4>Moody Room</h4>\n                    </NavLink>\n                </div>\n            </header>\n        );\n    }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport class Menu extends React.Component {\n    render() {\n        const { toggleNavigation, navigationClass } = this.props;\n\n        return (\n            <div>\n                <div className={`navigation ${navigationClass}`}>\n                    <h2>\n                        <NavLink to=\"/\" onClick={toggleNavigation}>\n                            Home\n                        </NavLink>\n                    </h2>\n                    <h2>\n                        <NavLink to=\"/current\" onClick={toggleNavigation}>\n                            Current\n                        </NavLink>\n                    </h2>\n                    <h2>\n                        <NavLink\n                            to=\"/history\"\n                            activeClassName=\"active\"\n                            onClick={toggleNavigation}\n                        >\n                            History\n                        </NavLink>\n                    </h2>\n                    <h2>\n                        <NavLink\n                            to=\"/hackathon\"\n                            activeClassName=\"active\"\n                            onClick={toggleNavigation}\n                        >\n                            Hackathon\n                        </NavLink>\n                    </h2>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nexport const Themes = {\n    navigation: {\n        isOpen: false,\n        icon: {\n            openedClassName: 'fa-times',\n            closedClassName: 'fa-bars'\n        },\n        container: {\n            openedClassName: 'open',\n            closedClassName: ''\n        }\n    },\n    moods: {\n        happy: 'bg-happy',\n        sad: 'bg-sad',\n        angry: 'bg-angry',\n        confused: 'bg-confused',\n        disgusted: 'bg-disgusted',\n        surprised: 'bg-surprised',\n        calm: 'bg-calm',\n        unknown: 'bg-unknown'\n    },\n    toggleNavigationHandler: () => {}\n};\n\nexport const ThemeContext = React.createContext(Themes.moods.happys);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './Routes';\nimport { SiteHeader } from './shared/SiteHeader';\nimport { Menu } from './shared/Menu';\nimport { Themes } from '../Contexts/Themes';\nimport { AppContext } from '../Contexts/AppContext';\nimport api from '../data/api';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavigationOpen: Themes.navigation.isOpen,\n            navigationClassName: Themes.navigation.container.closedClassName,\n            iconClassName: Themes.navigation.icon.closedClassName,\n            appStore: {},\n            timer: null,\n            isDataLoaded: false,\n            currentMoodTimer: null\n        };\n\n        this.toggleNavigation = () => {\n            this.setState(state => ({\n                isNavigationOpen: state.isNavigationOpen ? false : true,\n\n                navigationClassName: state.isNavigationOpen\n                    ? Themes.navigation.container.closedClassName\n                    : Themes.navigation.container.openedClassName,\n\n                iconClassName: state.isNavigationOpen\n                    ? Themes.navigation.icon.closedClassName\n                    : Themes.navigation.icon.openedClassName\n            }));\n        };\n    }\n\n    componentDidMount() {\n        const requestCurrentData = async () => {\n            const data = await api.getCurrentStatus();\n            if (data) {\n                this.setState({\n                    appStore: {\n                        ...data\n                    },\n                    isDataLoaded: true\n                });\n            }\n        };\n\n        requestCurrentData();\n\n        this.setState({\n            timer: setInterval(() => {\n                requestCurrentData();\n            }, 15000)\n        });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.timer);\n    }\n\n    render() {\n        const {\n            appStore,\n            iconClassName,\n            navigationClassName,\n            isDataLoaded\n        } = this.state;\n        const { commonMoodName } = appStore;\n        return (\n            <Router>\n                <AppContext.Provider value={appStore}>\n                    <div\n                        className={`App bg-${\n                            commonMoodName ? commonMoodName : 'unknown'\n                        }`}\n                    >\n                        <SiteHeader\n                            toggleNavigation={this.toggleNavigation}\n                            iconClassName={iconClassName}\n                        />\n\n                        <Menu\n                            toggleNavigation={this.toggleNavigation}\n                            navigationClass={navigationClassName}\n                        />\n\n                        <div className=\"main-content\">\n                            {isDataLoaded ? <Routes /> : null}\n                        </div>\n                    </div>\n                </AppContext.Provider>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.less';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}